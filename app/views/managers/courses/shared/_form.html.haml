- content_for :javascripts do
  = javascript_include_tag 'courses/form'
  = javascript_include_tag 'courses/users-autocomplete'

= form_for [:managers, course], html: { id: 'create-course-form' } do |f|
  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :title, t('.name') + ':'
    .form-group-main
      .form-unit
        = f.text_field :title, placeholder: t('.example') + ": " + t('.example2'), required: true, autocomplete: "off"

  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :silabus, t('.descrip') + ':'
    .form-group-main
      .form-unit
        = f.text_area :silabus, placeholder: t('.descrip'), required: true, autocomplete: "off", rows: 7

  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :init_date, t('.init_date')
    .form-group-main
      .form-unit
        = f.text_field :init_date, :placeholder => t('.init_date2'), :class => "date-picker", :value => (f.object.init_date.strftime('%d/%m/%Y') if !f.object.init_date.nil?  ), :required => "required", :autocomplete => "off"

  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :admins, t('.teachers') + ':'
    .form-group-main
      .form-unit

        .table-box#course-teachers-list
          .table-box-header
            = text_field_tag 'teachers-search', '', id: 'teachers-search-input', placeholder: t('.last_name'), data: { role: 'teachers' }
            .spinner-dark
          .table-box-body.scrollbar
            .users-list
              - unless course.new_record?
                - unless course.teachers.blank?
                  - course.teachers.each do |teacher|
                    .table-box-unit{ data: { user_id: teacher.id, user_role: "teachers" } }
                      - member = MembersInCourse.find_by_user_id_and_course_id(teacher.id, course.id) unless course.nil?
                      %label{class: "table-box-unit-inner#{member.nil? ? "" : " active"}"}
                        = avatar('user', '30', "no", teacher.id, "avatar", "no", "no")
                        %span= teacher.last_name + " " + teacher.first_name
                        .delete= icon('w-cross-9-gray')
                        = check_box_tag("teachers["+teacher.id.to_s+"]", value = member.nil? ? "0" : member.accepted ? "1" : "0", checked = member.nil? ? false : member.accepted)
              - if course.new_record? || course.teachers.blank?
                .inner-no-content
                  %h5= t('.add')
                  %p= t('.find')

  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :members, t('.students') + ':'
    .form-group-main
      .form-unit
        = hidden_field_tag "check_members", true

        .table-box#course-students-list
          .table-box-header
            = text_field_tag 'students-search', '', id: 'students-search-input', placeholder: t('.write_name'), data: { role: 'students' }
            .spinner-dark
          .table-box-body.scrollbar
            .users-list
              - unless course.new_record?
                - unless course.students.blank?
                  - course.students.each do |student|
                    .table-box-unit{ data: { user_id: student.id, user_role: 'students'} }
                      - member = MembersInCourse.find_by_user_id_and_course_id(student.id, course.id) unless course.nil?
                      %label{class: "table-box-unit-inner#{member.nil? ? "" : " active"}"}
                        = avatar('user', '30', "no", student.id, "avatar", "no", "no")
                        %span= student.last_name + " " + student.first_name
                        .delete= icon('w-cross-9-gray')
                        = check_box_tag("students["+student.id.to_s+"]", value = member.nil? ? "0" : member.accepted ? "1" : "0", checked = member.nil? ? false : member.accepted)
              - if course.new_record? || course.students.blank?
                .inner-no-content
                  %h5= t('.enroll')
                  %p= t('.find2')

  %br/
  %br/
  %ul.list-buttons.left
    %li= link_to t('.cancel'), :back, class: 'btn btn-medium btn-secondary'
    %li
      %span.btn.btn-primary.input-btn.btn-medium.activable
        = f.submit ( course.new_record? ? t('.create') : t('.save'))
