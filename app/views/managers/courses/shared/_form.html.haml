- content_for :javascripts do
  = javascript_include_tag 'courses/users-autocomplete'

= form_for [:managers, course], html: { class: 'form-validate-js' } do |f|
  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :title, 'Nombre:'
    .form-group-main
      .form-unit
        = f.text_field :title, placeholder: "Ejemplo: Matemáticas I", required: true, autocomplete: "off"

  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :silabus, 'Descripción:'
    .form-group-main
      .form-unit
        = f.text_area :silabus, placeholder: "Descripción", required: true, autocomplete: "off", rows: 7

  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :public_status, "Privacidad"
    .form-group-main
      .form-unit
        = f.select :public_status, options_for_select([['Público','public'],['Privado','Private']])

  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :init_date, "Fecha de Inicio"
    .form-group-main
      .form-unit
        = f.text_field :init_date, :placeholder => 'Fecha inicio', :class => "date-picker", :value => (f.object.init_date)? f.object.init_date.strftime('%m/%d/%Y'):f.object.init_date, :required => "required", :autocomplete => "off"

  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :admins, 'Profesores:'
    .form-group-main
      .form-unit

        .table-box
          .table-box-header
            = text_field_tag 'teachers-search', '', id: 'teachers-search-input', placeholder: 'Escribe un nombre o apellido.', data: { role: 'teachers' }
          .table-box-body.scrollbar
            .users-list
              - unless course.new_record?
                - unless @course.teachers.blank?
                  - get_network_teachers(true).each do |teacher|
                    .table-box-unit{ data: { user_id: teacher.id } }
                      - member = MembersInCourse.find_by_user_id_and_course_id(teacher.id, @course.id) unless @course.nil?
                      %label{class: "table-box-unit-inner#{member.nil? ? "" : " active"}"}
                        = avatar('user', '30', "no", teacher.id, "avatar", "no", "no")
                        %span= teacher.last_name + " " + teacher.first_name
                        = icon('checked-16')
                        = check_box_tag("teachers["+teacher.id.to_s+"]", value = member.nil? ? "0" : member.accepted ? "1" : "0", checked = member.nil? ? false : member.accepted, class: 'toggle-label-js')
              - if course.new_record? || course.students.blank?
                .inner-no-content
                  %h5 Agrega profesores al curso.
                  %p Busca profesores para administrar el curso.

  .form-group.label-on-top.l-label
    .form-group-label
      = f.label :members, 'Alumnos:'
    .form-group-main
      .form-unit
        = hidden_field_tag "check_members", true

        .table-box
          .table-box-header
            = text_field_tag 'students-search', '', id: 'students-search-input', placeholder: 'Escribe un nombre o apellido.', data: { role: 'students' }
          .table-box-body.scrollbar
            .users-list
              - unless course.new_record?
                - unless @course.students.blank?
                  - @course.students.each do |student|
                    .table-box-unit{ data: { user_id: student.id } }
                      - member = MembersInCourse.find_by_user_id_and_course_id(student.id, @course.id) unless @course.nil?
                      %label{class: "table-box-unit-inner#{member.nil? ? "" : " active"}"}
                        = avatar('user', '30', "no", student.id, "avatar", "no", "no")
                        %span= student.last_name + " " + student.first_name
                        = icon('checked-16')
                        = check_box_tag("students["+student.id.to_s+"]", value = member.nil? ? "0" : member.accepted ? "1" : "0", checked = member.nil? ? false : member.accepted, class: 'toggle-label-js')
              - if course.new_record? || course.students.blank?
                .inner-no-content
                  %h5 Inscribe estudiantes a tu curso.
                  %p Busca estudiantes para unirlos automaticamente al curso.

  %br/
  %br/
  %ul.list-buttons.left
    %li= link_to 'Cancelar', :back, class: 'btn btn-medium btn-secondary'
    %li
      %span.btn.btn-primary.input-btn.btn-medium.activable
        = f.submit ( course.new_record? ? 'Crear Curso' : 'Guardar cambios')
