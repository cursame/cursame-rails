- comments = post.comments
- if comments.size > 3
  .comments-load-more
    = link_to load_more_comments_path(id: post.id, type: post.class), remote: true do
      = icon('comments')
      = t('.prev_comments')

.comments-list
  - comments.last(COMMENTS_PER_PAGE).each do |comment|
    = render partial: 'shared/posts/post_child_comment', locals: { comment: comment }
    
- if new_comment
  .comments-new-comment
    = form_tag "/home/add_new_comment", class: "", remote: true do
      .comment
        .comment-author
          %span.avatar-holder
            = avatar('user', '30', 'no', current_user.id, 'avatar', 'no', 'no')
        .comment-main
          = text_area_tag "comment", nil, placeholder: t('.write_comment'), required: true, class: 'autogrow swift-enter'
          = hidden_field_tag 'commentable_id', post.id
          = hidden_field_tag 'commentable_type', post.class.to_s
          = hidden_field_tag 'from_enter_key', true
        .comment-upload-asset
          = label_tag "upload-asset-#{post.id}", class: 'btn btn-small btn-secondary' do
            = icon('upload-asset')
          .hide-input-file
            = file_field_tag :filename, id: "upload-asset-#{post.id}", class: 'upload-input', multiple: false, name: "asset[filename]"
            = hidden_field_tag :user_id, current_user.id
- else
  .comments-not-allowed
    %span 
      = t('.non_commentable')
