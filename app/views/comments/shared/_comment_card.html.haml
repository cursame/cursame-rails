- data_attributes = { wall_id: wall.id }
- user = post_comment.user
- comment_type = post_comment.commentable_type
- commentable = post_comment.commentable

.post-box.comment{ id: post_comment.id, class: card_type, data: data_attributes }
  - if comment_type == 'Course'
    - if commentable.owner?(current_role, current_user) or post_comment.owner?(current_role, current_user)
      = render partial: 'shared/posts/post_admin_actions', locals: { post: post_comment, wall: wall }
  - else
    - if post_comment.owner?(current_role, current_user)
      = render partial: 'shared/posts/post_admin_actions', locals: { post: post_comment, wall: wall }
  .post-box-main
    .post-box-main-author
      = link_to show_user_path(user.personal_url), title: user.name, class: 'post-box-avatar' do
        %span.avatar-holder
          = avatar 'user', '45', 'no', user.id, 'avatar', 'no', 'no'
      .post-box-main-author-content
        .post-breadcrumb
          %span
            = link_to user.name, show_user_path(user.personal_url), title: user.name
          - unless comment_type == 'Network'
            = icon 'arrow-right-gray'
            - case comment_type
            - when 'User'
              %span= link_to commentable.name, show_user_path(commentable.personal_url), title: commentable.name
            - when 'Course'
              %span= link_to commentable.title, course_path(commentable), title: commentable.title
        %span.timestamp= time_ago_in_words post_comment.created_at
    .post-box-content
      = post_comment.comment_html
      = render partial: 'shared/posts/post_meta_data', locals: { wall: wall, post: post_comment }

    - if post_comment.owner?(current_role, current_user)
      .post-box-edit
        %h5= t('.edit_comment')
        .post-edit-form-js
    .post-box-under-container
      .post-box-likes= render partial: 'shared/posts/post_people_who_liked', locals: { post: post_comment, wall: wall }
      .comments-wrap.comment{ data: { comments_group_id: post_comment.id } }
        = render partial: 'shared/posts/post_comments_list', locals: { post: post_comment, new_comment: true }

